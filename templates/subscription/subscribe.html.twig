{% extends 'base.html.twig' %}

{% block title %}Subscribe{% endblock %}

{% block body %}
    <div class="confirmation-container">
        {% for message in app.flashes('success') %}
            <div class="success-message">{{ message }}</div>
        {% endfor %}

        <h1>Subscribe for Weather Forecast</h1>

        {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}
        <div class="form-group">
            {{ form_label(form.email) }}
            {{ form_widget(form.email, {'attr': {'class': 'form-input'}}) }}
            <div class="form-error">
                {{ form_errors(form.email) }}
            </div>

        </div>

        <div class="form-group" style="position: relative;">
            {{ form_label(form.city) }}
            {{ form_widget(form.city, {'attr': {'autocomplete': 'off', 'class': 'form-input'}}) }}
            <div class="form-error">
                {{ form_errors(form.city) }}
            </div>
            <div id="city-suggestions" class="suggestion-box"></div>
        </div>

        <div class="form-group">
            {{ form_label(form.frequency) }}
            {{ form_widget(form.frequency, {'attr': {'class': 'form-input'}}) }}
            {{ form_errors(form.frequency) }}
        </div>

        <button type="submit" class="confirm-link">Subscribe</button>

        <p class="small-note">
            Already have a subscription?
            <a href="{{ url('app_login') }}">Login</a>
        </p>
        {{ form_end(form) }}
    </div>
    <script>
        function cityDropdown() {
            const input = document.getElementById('subscribe_form_city');
            const suggestions = document.getElementById('city-suggestions');

            let debounceTimeout;

            input.addEventListener('input', () => {
                clearTimeout(debounceTimeout);

                const val = input.value.trim();
                if (val.length < 2) {
                    suggestions.style.display = 'none';
                    suggestions.innerHTML = '';
                    return;
                }

                debounceTimeout = setTimeout(() => {
                    fetch(`/city/search?q=${encodeURIComponent(val)}`)
                        .then(res => res.json())
                        .then(data => {
                            suggestions.innerHTML = '';
                            if (data.location) {
                                data = [{
                                    name: data.location.name,
                                    region: data.location.region,
                                    country: data.location.country
                                }];
                            }
                            if (!data.length) {
                                const noCityDiv = document.createElement('div');
                                noCityDiv.textContent = 'City not found';
                                noCityDiv.style.padding = '8px 12px';
                                noCityDiv.style.color = '#999';
                                suggestions.appendChild(noCityDiv);
                                suggestions.style.display = 'block';
                                return;
                            }
                            suggestions.innerHTML = '';
                            data.forEach(city => {
                                const div = document.createElement('div');
                                div.textContent = `${city.name}, ${city.region}, ${city.country}`;
                                div.addEventListener('click', () => {
                                    input.value = city.name;
                                    suggestions.style.display = 'none';
                                });
                                suggestions.appendChild(div);
                            });
                            suggestions.style.display = 'block';
                        })
                        .catch(() => {
                            suggestions.style.display = 'none';
                            suggestions.innerHTML = '';
                        });
                }, 800);
            });
            document.addEventListener('click', (e) => {
                if (!suggestions.contains(e.target) && e.target !== input) {
                    suggestions.style.display = 'none';
                }
            });
        }

        document.addEventListener('DOMContentLoaded', cityDropdown());
    </script>
{% endblock %}

{% block stylesheets %}
    <style>
        .confirmation-container {
            max-width: 600px;
            margin: 50px auto;
            padding: 30px;
            background-color: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 12px;
            font-family: "Segoe UI", sans-serif;
            color: #333;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-input {
            width: 100%;
            padding: 10px;
            border-radius: 8px;
            border: 1px solid #ccc;
            font-size: 1em;
        }

        .form-error {
            color: #d9534f;
            font-size: 0.9em;
            margin-top: 5px;
        }

        .confirm-link {
            display: inline-block;
            margin-top: 10px;
            padding: 10px 18px;
            background-color: #007bff;
            color: white;
            text-decoration: none;
            border: none;
            border-radius: 8px;
            transition: background-color 0.3s ease;
            cursor: pointer;
        }

        .confirm-link:hover {
            background-color: #0056b3;
        }

        .small-note {
            margin-top: 15px;
            font-size: 0.95em;
        }

        .success-message {
            color: #155724;
            background-color: #d4edda;
            padding: 10px;
            border-radius: 8px;
            margin-bottom: 20px;
        }

        .suggestion-box {
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            border: 1px solid #ccc;
            border-top: none;
            z-index: 10;
            border-radius: 0 0 8px 8px;
            display: none;
            max-height: 180px;
            overflow-y: auto;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        }

        .suggestion-box div {
            padding: 8px 12px;
            cursor: pointer;
        }

        .suggestion-box div:hover {
            background-color: #f1f1f1;
        }
    </style>
{% endblock %}
